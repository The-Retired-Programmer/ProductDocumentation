<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.17">
<title>Actions Support User Guide : Early Preview Edition - Release 2.0.1</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700">
<style>
/*! Asciidoctor default stylesheet | MIT License | https://asciidoctor.org */
/* Uncomment the following line when using as a custom stylesheet */
/* @import "https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700"; */
html{font-family:sans-serif;-webkit-text-size-adjust:100%}
a{background:none}
a:focus{outline:thin dotted}
a:active,a:hover{outline:0}
h1{font-size:2em;margin:.67em 0}
b,strong{font-weight:bold}
abbr{font-size:.9em}
abbr[title]{cursor:help;border-bottom:1px dotted #dddddf;text-decoration:none}
dfn{font-style:italic}
hr{height:0}
mark{background:#ff0;color:#000}
code,kbd,pre,samp{font-family:monospace;font-size:1em}
pre{white-space:pre-wrap}
q{quotes:"\201C" "\201D" "\2018" "\2019"}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}
sup{top:-.5em}
sub{bottom:-.25em}
img{border:0}
svg:not(:root){overflow:hidden}
figure{margin:0}
audio,video{display:inline-block}
audio:not([controls]){display:none;height:0}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{border:0;padding:0}
button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}
button,input{line-height:normal}
button,select{text-transform:none}
button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}
button[disabled],html input[disabled]{cursor:default}
input[type=checkbox],input[type=radio]{padding:0}
button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
textarea{overflow:auto;vertical-align:top}
table{border-collapse:collapse;border-spacing:0}
*,::before,::after{box-sizing:border-box}
html,body{font-size:100%}
body{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:"Noto Serif","DejaVu Serif",serif;line-height:1;position:relative;cursor:auto;-moz-tab-size:4;-o-tab-size:4;tab-size:4;word-wrap:anywhere;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}
a:hover{cursor:pointer}
img,object,embed{max-width:100%;height:auto}
object,embed{height:100%}
img{-ms-interpolation-mode:bicubic}
.left{float:left!important}
.right{float:right!important}
.text-left{text-align:left!important}
.text-right{text-align:right!important}
.text-center{text-align:center!important}
.text-justify{text-align:justify!important}
.hide{display:none}
img,object,svg{display:inline-block;vertical-align:middle}
textarea{height:auto;min-height:50px}
select{width:100%}
.subheader,.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}
div,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0}
a{color:#2156a5;text-decoration:underline;line-height:inherit}
a:hover,a:focus{color:#1d4b8f}
a img{border:0}
p{line-height:1.6;margin-bottom:1.25em;text-rendering:optimizeLegibility}
p aside{font-size:.875em;line-height:1.35;font-style:italic}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:"Open Sans","DejaVu Sans",sans-serif;font-weight:300;font-style:normal;color:#ba3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;line-height:1.0125em}
h1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title small,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}
h1{font-size:2.125em}
h2{font-size:1.6875em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}
h4,h5{font-size:1.125em}
h6{font-size:1em}
hr{border:solid #dddddf;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1875em}
em,i{font-style:italic;line-height:inherit}
strong,b{font-weight:bold;line-height:inherit}
small{font-size:60%;line-height:inherit}
code{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;font-weight:400;color:rgba(0,0,0,.9)}
ul,ol,dl{line-height:1.6;margin-bottom:1.25em;list-style-position:outside;font-family:inherit}
ul,ol{margin-left:1.5em}
ul li ul,ul li ol{margin-left:1.25em;margin-bottom:0}
ul.square li ul,ul.circle li ul,ul.disc li ul{list-style:inherit}
ul.square{list-style-type:square}
ul.circle{list-style-type:circle}
ul.disc{list-style-type:disc}
ol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}
dl dt{margin-bottom:.3125em;font-weight:bold}
dl dd{margin-bottom:1.25em}
blockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:1px solid #ddd}
blockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}
@media screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2}
h1{font-size:2.75em}
h2{font-size:2.3125em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}
h4{font-size:1.4375em}}
table{background:#fff;margin-bottom:1.25em;border:1px solid #dedede;word-wrap:normal}
table thead,table tfoot{background:#f7f8f7}
table thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{padding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:left}
table tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba(0,0,0,.8)}
table tr.even,table tr.alt{background:#f8f8f7}
table thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfoot tr td{line-height:1.6}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;word-spacing:-.05em}
h1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.title strong,h4 strong,h5 strong,h6 strong{font-weight:400}
.center{margin-left:auto;margin-right:auto}
.stretch{width:100%}
.clearfix::before,.clearfix::after,.float-group::before,.float-group::after{content:" ";display:table}
.clearfix::after,.float-group::after{clear:both}
:not(pre).nobreak{word-wrap:normal}
:not(pre).nowrap{white-space:nowrap}
:not(pre).pre-wrap{white-space:pre-wrap}
:not(pre):not([class^=L])>code{font-size:.9375em;font-style:normal!important;letter-spacing:0;padding:.1em .5ex;word-spacing:-.15em;background:#f7f7f8;border-radius:4px;line-height:1.45;text-rendering:optimizeSpeed}
pre{color:rgba(0,0,0,.9);font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;line-height:1.45;text-rendering:optimizeSpeed}
pre code,pre pre{color:inherit;font-size:inherit;line-height:inherit}
pre>code{display:block}
pre.nowrap,pre.nowrap pre{white-space:pre;word-wrap:normal}
em em{font-style:normal}
strong strong{font-weight:400}
.keyseq{color:rgba(51,51,51,.8)}
kbd{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;display:inline-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background:#f7f7f7;border:1px solid #ccc;border-radius:3px;box-shadow:0 1px 0 rgba(0,0,0,.2),inset 0 0 0 .1em #fff;margin:0 .15em;padding:.2em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowrap}
.keyseq kbd:first-child{margin-left:0}
.keyseq kbd:last-child{margin-right:0}
.menuseq,.menuref{color:#000}
.menuseq b:not(.caret),.menuref{font-weight:inherit}
.menuseq{word-spacing:-.02em}
.menuseq b.caret{font-size:1.25em;line-height:.8}
.menuseq i.caret{font-weight:bold;text-align:center;width:.45em}
b.button::before,b.button::after{position:relative;top:-1px;font-weight:400}
b.button::before{content:"[";padding:0 3px 0 2px}
b.button::after{content:"]";padding:0 2px 0 3px}
p a>code:hover{color:rgba(0,0,0,.9)}
#header,#content,#footnotes,#footer{width:100%;margin:0 auto;max-width:62.5em;*zoom:1;position:relative;padding-left:.9375em;padding-right:.9375em}
#header::before,#header::after,#content::before,#content::after,#footnotes::before,#footnotes::after,#footer::before,#footer::after{content:" ";display:table}
#header::after,#content::after,#footnotes::after,#footer::after{clear:both}
#content{margin-top:1.25em}
#content::before{content:none}
#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bottom:0}
#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #dddddf}
#header>h1:only-child,body.toc2 #header>h1:nth-last-child(2){border-bottom:1px solid #dddddf;padding-bottom:8px}
#header .details{border-bottom:1px solid #dddddf;line-height:1.45;padding-top:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);display:flex;flex-flow:row wrap}
#header .details span:first-child{margin-left:-.125em}
#header .details span.email a{color:rgba(0,0,0,.85)}
#header .details br{display:none}
#header .details br+span::before{content:"\00a0\2013\00a0"}
#header .details br+span.author::before{content:"\00a0\22c5\00a0";color:rgba(0,0,0,.85)}
#header .details br+span#revremark::before{content:"\00a0|\00a0"}
#header #revnumber{text-transform:capitalize}
#header #revnumber::after{content:"\00a0"}
#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1px solid #dddddf;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bottom:1.25rem}
#toc{border-bottom:1px solid #e7e7e9;padding-bottom:.5em}
#toc>ul{margin-left:.125em}
#toc ul.sectlevel0>li>a{font-style:italic}
#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}
#toc ul{font-family:"Open Sans","DejaVu Sans",sans-serif;list-style-type:none}
#toc li{line-height:1.3334;margin-top:.3334em}
#toc a{text-decoration:none}
#toc a:active{text-decoration:underline}
#toctitle{color:#7a2518;font-size:1.2em}
@media screen and (min-width:768px){#toctitle{font-size:1.375em}
body.toc2{padding-left:15em;padding-right:0}
#toc.toc2{margin-top:0!important;background:#f8f8f7;position:fixed;width:15em;left:0;top:0;border-right:1px solid #e7e7e9;border-top-width:0!important;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;height:100%;overflow:auto}
#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}
#toc.toc2>ul{font-size:.9em;margin-bottom:0}
#toc.toc2 ul ul{margin-left:0;padding-left:1em}
#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin-bottom:.5em}
body.toc2.toc-right{padding-left:0;padding-right:15em}
body.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #e7e7e9;left:auto;right:0}}
@media screen and (min-width:1280px){body.toc2{padding-left:20em;padding-right:0}
#toc.toc2{width:20em}
#toc.toc2 #toctitle{font-size:1.375em}
#toc.toc2>ul{font-size:.95em}
#toc.toc2 ul ul{padding-left:1.25em}
body.toc2.toc-right{padding-left:0;padding-right:20em}}
#content #toc{border:1px solid #e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;border-radius:4px}
#content #toc>:first-child{margin-top:0}
#content #toc>:last-child{margin-bottom:0}
#footer{max-width:none;background:rgba(0,0,0,.8);padding:1.25em}
#footer-text{color:hsla(0,0%,100%,.8);line-height:1.44}
#content{margin-bottom:.625em}
.sect1{padding-bottom:.625em}
@media screen and (min-width:768px){#content{margin-bottom:1.25em}
.sect1{padding-bottom:1.25em}}
.sect1:last-child{padding-bottom:0}
.sect1+.sect1{border-top:1px solid #e7e7e9}
#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblock>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:absolute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decoration:none!important;visibility:hidden;text-align:center;font-weight:400}
#content h1>a.anchor::before,h2>a.anchor::before,h3>a.anchor::before,#toctitle>a.anchor::before,.sidebarblock>.content>.title>a.anchor::before,h4>a.anchor::before,h5>a.anchor::before,h6>a.anchor::before{content:"\00A7";font-size:.85em;display:block;padding-top:.1em}
#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.content>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sidebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hover,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{visibility:visible}
#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.content>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decoration:none}
#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:hover,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:hover,h6>a.link:hover{color:#a53221}
details,.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{margin-bottom:1.25em}
details{margin-left:1.25rem}
details>summary{cursor:pointer;display:block;position:relative;line-height:1.6;margin-bottom:.625rem;outline:none;-webkit-tap-highlight-color:transparent}
details>summary::-webkit-details-marker{display:none}
details>summary::before{content:"";border:solid transparent;border-left:solid;border-width:.3em 0 .3em .5em;position:absolute;top:.5em;left:-1.25rem;transform:translateX(15%)}
details[open]>summary::before{border:solid transparent;border-top:solid;border-width:.5em .3em 0;transform:translateY(15%)}
details>summary::after{content:"";width:1.25rem;height:1em;position:absolute;top:.3em;left:-1.25rem}
.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility;text-align:left;font-family:"Noto Serif","DejaVu Serif",serif;font-size:1rem;font-style:italic}
table.tableblock.fit-content>caption.title{white-space:nowrap;width:0}
.paragraph.lead>p,#preamble>.sectionbody>[class=paragraph]:first-of-type p{font-size:1.21875em;line-height:1.6;color:rgba(0,0,0,.85)}
.admonitionblock>table{border-collapse:separate;border:0;background:none;width:100%}
.admonitionblock>table td.icon{text-align:center;width:80px}
.admonitionblock>table td.icon img{max-width:none}
.admonitionblock>table td.icon .title{font-weight:bold;font-family:"Open Sans","DejaVu Sans",sans-serif;text-transform:uppercase}
.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em;border-left:1px solid #dddddf;color:rgba(0,0,0,.6);word-wrap:anywhere}
.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}
.exampleblock>.content{border:1px solid #e6e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;border-radius:4px}
.exampleblock>.content>:first-child{margin-top:0}
.exampleblock>.content>:last-child{margin-bottom:0}
.sidebarblock{border:1px solid #dbdbd6;margin-bottom:1.25em;padding:1.25em;background:#f3f3f2;border-radius:4px}
.sidebarblock>:first-child{margin-top:0}
.sidebarblock>:last-child{margin-bottom:0}
.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}
.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olist>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-child>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-child>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{margin-bottom:0}
.literalblock pre,.listingblock>.content>pre{border-radius:4px;overflow-x:auto;padding:1em;font-size:.8125em}
@media screen and (min-width:768px){.literalblock pre,.listingblock>.content>pre{font-size:.90625em}}
@media screen and (min-width:1280px){.literalblock pre,.listingblock>.content>pre{font-size:1em}}
.literalblock pre,.listingblock>.content>pre:not(.highlight),.listingblock>.content>pre[class=highlight],.listingblock>.content>pre[class^="highlight "]{background:#f7f7f8}
.literalblock.output pre{color:#f7f7f8;background:rgba(0,0,0,.9)}
.listingblock>.content{position:relative}
.listingblock code[data-lang]::before{display:none;content:attr(data-lang);position:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text-transform:uppercase;color:inherit;opacity:.5}
.listingblock:hover code[data-lang]::before{display:block}
.listingblock.terminal pre .command::before{content:attr(data-prompt);padding-right:.5em;color:inherit;opacity:.5}
.listingblock.terminal pre .command:not([data-prompt])::before{content:"$"}
.listingblock pre.highlightjs{padding:0}
.listingblock pre.highlightjs>code{padding:1em;border-radius:4px}
.listingblock pre.prettyprint{border-width:0}
.prettyprint{background:#f7f7f8}
pre.prettyprint .linenums{line-height:1.45;margin-left:2em}
pre.prettyprint li{background:none;list-style-type:inherit;padding-left:0}
pre.prettyprint li code[data-lang]::before{opacity:1}
pre.prettyprint li:not(:first-child) code[data-lang]::before{display:none}
table.linenotable{border-collapse:separate;border:0;margin-bottom:0;background:none}
table.linenotable td[class]{color:inherit;vertical-align:top;padding:0;line-height:inherit;white-space:normal}
table.linenotable td.code{padding-left:.75em}
table.linenotable td.linenos,pre.pygments .linenos{border-right:1px solid;opacity:.35;padding-right:.5em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}
pre.pygments span.linenos{display:inline-block;margin-right:.75em}
.quoteblock{margin:0 1em 1.25em 1.5em;display:table}
.quoteblock:not(.excerpt)>.title{margin-left:-1.5em;margin-bottom:.75em}
.quoteblock blockquote,.quoteblock p{color:rgba(0,0,0,.85);font-size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style:italic;text-align:justify}
.quoteblock blockquote{margin:0;padding:0;border:0}
.quoteblock blockquote::before{content:"\201c";float:left;font-size:2.75em;font-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shadow:0 1px 2px rgba(0,0,0,.1)}
.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}
.quoteblock .attribution{margin-top:.75em;margin-right:.5ex;text-align:right}
.verseblock{margin:0 1em 1.25em}
.verseblock pre{font-family:"Open Sans","DejaVu Sans",sans-serif;font-size:1.15rem;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}
.verseblock pre strong{font-weight:400}
.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}
.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-height:1.45;font-style:italic}
.quoteblock .attribution br,.verseblock .attribution br{display:none}
.quoteblock .attribution cite,.verseblock .attribution cite{display:block;letter-spacing:-.025em;color:rgba(0,0,0,.6)}
.quoteblock.abstract blockquote::before,.quoteblock.excerpt blockquote::before,.quoteblock .quoteblock blockquote::before{display:none}
.quoteblock.abstract blockquote,.quoteblock.abstract p,.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{line-height:1.6;word-spacing:0}
.quoteblock.abstract{margin:0 1em 1.25em;display:block}
.quoteblock.abstract>.title{margin:0 0 .375em;font-size:1.15em;text-align:center}
.quoteblock.excerpt>blockquote,.quoteblock .quoteblock{padding:0 0 .25em 1em;border-left:.25em solid #dddddf}
.quoteblock.excerpt,.quoteblock .quoteblock{margin-left:0}
.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{color:inherit;font-size:1.0625rem}
.quoteblock.excerpt .attribution,.quoteblock .quoteblock .attribution{color:inherit;font-size:.85rem;text-align:left;margin-right:0}
p.tableblock:last-child{margin-bottom:0}
td.tableblock>.content{margin-bottom:1.25em;word-wrap:anywhere}
td.tableblock>.content>:last-child{margin-bottom:-1.25em}
table.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}
table.grid-all>*>tr>*{border-width:1px}
table.grid-cols>*>tr>*{border-width:0 1px}
table.grid-rows>*>tr>*{border-width:1px 0}
table.frame-all{border-width:1px}
table.frame-ends{border-width:1px 0}
table.frame-sides{border-width:0 1px}
table.frame-none>colgroup+*>:first-child>*,table.frame-sides>colgroup+*>:first-child>*{border-top-width:0}
table.frame-none>:last-child>:last-child>*,table.frame-sides>:last-child>:last-child>*{border-bottom-width:0}
table.frame-none>*>tr>:first-child,table.frame-ends>*>tr>:first-child{border-left-width:0}
table.frame-none>*>tr>:last-child,table.frame-ends>*>tr>:last-child{border-right-width:0}
table.stripes-all>*>tr,table.stripes-odd>*>tr:nth-of-type(odd),table.stripes-even>*>tr:nth-of-type(even),table.stripes-hover>*>tr:hover{background:#f8f8f7}
th.halign-left,td.halign-left{text-align:left}
th.halign-right,td.halign-right{text-align:right}
th.halign-center,td.halign-center{text-align:center}
th.valign-top,td.valign-top{vertical-align:top}
th.valign-bottom,td.valign-bottom{vertical-align:bottom}
th.valign-middle,td.valign-middle{vertical-align:middle}
table thead th,table tfoot th{font-weight:bold}
tbody tr th{background:#f7f8f7}
tbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);font-weight:bold}
p.tableblock>code:only-child{background:none;padding:0}
p.tableblock{font-size:1em}
ol{margin-left:1.75em}
ul li ol{margin-left:1.5em}
dl dd{margin-left:1.125em}
dl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}
li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olist .ulist{margin-bottom:.625em}
ul.checklist,ul.none,ol.none,ul.no-bullet,ol.no-bullet,ol.unnumbered,ul.unstyled,ol.unstyled{list-style-type:none}
ul.no-bullet,ol.no-bullet,ol.unnumbered{margin-left:.625em}
ul.unstyled,ol.unstyled{margin-left:0}
li>p:empty:only-child::before{content:"";display:inline-block}
ul.checklist>li>p:first-child{margin-left:-1em}
ul.checklist>li>p:first-child>.fa-square-o:first-child,ul.checklist>li>p:first-child>.fa-check-square-o:first-child{width:1.25em;font-size:.8em;position:relative;bottom:.125em}
ul.checklist>li>p:first-child>input[type=checkbox]:first-child{margin-right:.25em}
ul.inline{display:flex;flex-flow:row wrap;list-style:none;margin:0 0 .625em -1.25em}
ul.inline>li{margin-left:1.25em}
.unstyled dl dt{font-weight:400;font-style:normal}
ol.arabic{list-style-type:decimal}
ol.decimal{list-style-type:decimal-leading-zero}
ol.loweralpha{list-style-type:lower-alpha}
ol.upperalpha{list-style-type:upper-alpha}
ol.lowerroman{list-style-type:lower-roman}
ol.upperroman{list-style-type:upper-roman}
ol.lowergreek{list-style-type:lower-greek}
.hdlist>table,.colist>table{border:0;background:none}
.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}
td.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}
td.hdlist1{font-weight:bold;padding-bottom:1.25em}
td.hdlist2{word-wrap:anywhere}
.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}
.colist td:not([class]):first-child{padding:.4em .75em 0;line-height:1;vertical-align:top}
.colist td:not([class]):first-child img{max-width:none}
.colist td:not([class]):last-child{padding:.25em 0}
.thumb,.th{line-height:0;display:inline-block;border:4px solid #fff;box-shadow:0 0 0 1px #ddd}
.imageblock.left{margin:.25em .625em 1.25em 0}
.imageblock.right{margin:.25em 0 1.25em .625em}
.imageblock>.title{margin-bottom:0}
.imageblock.thumb,.imageblock.th{border-width:6px}
.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}
.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inline-block;line-height:0}
.image.left{margin-right:.625em}
.image.right{margin-left:.625em}
a.image{text-decoration:none;display:inline-block}
a.image object{pointer-events:none}
sup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-align:super}
sup.footnote a,sup.footnoteref a{text-decoration:none}
sup.footnote a:active,sup.footnoteref a:active{text-decoration:underline}
#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}
#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em;border-width:1px 0 0}
#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size:.875em;margin-left:1.2em;margin-bottom:.2em}
#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none;margin-left:-1.05em}
#footnotes .footnote:last-of-type{margin-bottom:0}
#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}
div.unbreakable{page-break-inside:avoid}
.big{font-size:larger}
.small{font-size:smaller}
.underline{text-decoration:underline}
.overline{text-decoration:overline}
.line-through{text-decoration:line-through}
.aqua{color:#00bfbf}
.aqua-background{background:#00fafa}
.black{color:#000}
.black-background{background:#000}
.blue{color:#0000bf}
.blue-background{background:#0000fa}
.fuchsia{color:#bf00bf}
.fuchsia-background{background:#fa00fa}
.gray{color:#606060}
.gray-background{background:#7d7d7d}
.green{color:#006000}
.green-background{background:#007d00}
.lime{color:#00bf00}
.lime-background{background:#00fa00}
.maroon{color:#600000}
.maroon-background{background:#7d0000}
.navy{color:#000060}
.navy-background{background:#00007d}
.olive{color:#606000}
.olive-background{background:#7d7d00}
.purple{color:#600060}
.purple-background{background:#7d007d}
.red{color:#bf0000}
.red-background{background:#fa0000}
.silver{color:#909090}
.silver-background{background:#bcbcbc}
.teal{color:#006060}
.teal-background{background:#007d7d}
.white{color:#bfbfbf}
.white-background{background:#fafafa}
.yellow{color:#bfbf00}
.yellow-background{background:#fafa00}
span.icon>.fa{cursor:default}
a span.icon>.fa{cursor:inherit}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note::before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip::before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning::before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution::before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important::before{content:"\f06a";color:#bf0000}
.conum[data-value]{display:inline-block;color:#fff!important;background:rgba(0,0,0,.8);border-radius:50%;text-align:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font-family:"Open Sans","DejaVu Sans",sans-serif;font-style:normal;font-weight:bold}
.conum[data-value] *{color:#fff!important}
.conum[data-value]+b{display:none}
.conum[data-value]::after{content:attr(data-value)}
pre .conum[data-value]{position:relative;top:-.125em}
b.conum *{color:inherit!important}
.conum:not([data-value]):empty{display:none}
dt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}
h1,h2,p,td.content,span.alt,summary{letter-spacing:-.01em}
p strong,td.content strong,div.footnote strong{letter-spacing:-.005em}
p,blockquote,dt,td.content,span.alt,summary{font-size:1.0625rem}
p{margin-bottom:1.25rem}
.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font-size:1em}
.exampleblock>.content{background:#fffef7;border-color:#e0e0dc;box-shadow:0 1px 4px #e0e0dc}
.print-only{display:none!important}
@page{margin:1.25cm .75cm}
@media print{*{box-shadow:none!important;text-shadow:none!important}
html{font-size:80%}
a{color:inherit!important;text-decoration:underline!important}
a.bare,a[href^="#"],a[href^="mailto:"]{text-decoration:none!important}
a[href^="http:"]:not(.bare)::after,a[href^="https:"]:not(.bare)::after{content:"(" attr(href) ")";display:inline-block;font-size:.875em;padding-left:.25em}
abbr[title]{border-bottom:1px dotted}
abbr[title]::after{content:" (" attr(title) ")"}
pre,blockquote,tr,img,object,svg{page-break-inside:avoid}
thead{display:table-header-group}
svg{max-width:100%}
p,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}
h2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}
#header,#content,#footnotes,#footer{max-width:none}
#toc,.sidebarblock,.exampleblock>.content{background:none!important}
#toc{border-bottom:1px solid #dddddf!important;padding-bottom:0!important}
body.book #header{text-align:center}
body.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em}
body.book #header .details{border:0!important;display:block;padding:0!important}
body.book #header .details span:first-child{margin-left:0!important}
body.book #header .details br{display:block}
body.book #header .details br+span::before{content:none!important}
body.book #toc{border:0!important;text-align:left!important;padding:0!important;margin:0!important}
body.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{page-break-before:always}
.listingblock code[data-lang]::before{display:block}
#footer{padding:0 .9375em}
.hide-on-print{display:none!important}
.print-only{display:block!important}
.hide-for-print{display:none!important}
.show-for-print{display:inherit!important}}
@media amzn-kf8,print{#header>h1:first-child{margin-top:1.25rem}
.sect1{padding:0!important}
.sect1+.sect1{border:0}
#footer{background:none}
#footer-text{color:rgba(0,0,0,.6);font-size:.9em}}
@media amzn-kf8{#header,#content,#footnotes,#footer{padding:0}}
</style>
</head>
<body class="article toc2 toc-left">
<div id="header">
<h1>Actions Support User Guide : Early Preview Edition - Release 2.0.1</h1>
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#_introduction">Introduction</a>
<ul class="sectlevel2">
<li><a href="#_dynamicactions_and_dynamicasyncactions">DynamicActions and DynamicAsyncActions</a></li>
<li><a href="#_nodeactions">NodeActions</a></li>
</ul>
</li>
<li><a href="#_actionssupport_in_action">ActionsSupport in action</a>
<ul class="sectlevel2">
<li><a href="#_nodeactions_example">NodeActions example</a></li>
<li><a href="#_use_of_the_dynamicactiondynamicasyncaction_classes">Use of the DynamicAction/DynamicAsyncAction classes</a></li>
</ul>
</li>
<li><a href="#_the_actionssupport_api">The ActionsSupport API</a>
<ul class="sectlevel2">
<li><a href="#_nodeactions_2">NodeActions</a></li>
<li><a href="#_dynamicaction">DynamicAction</a></li>
<li><a href="#_dynamicasyncaction">DynamicAsyncAction</a></li>
<li><a href="#_cliexec">CLIExec</a></li>
</ul>
</li>
<li><a href="#_utilising_the_actionssupport_nbm">Utilising the ActionsSupport NBM</a>
<ul class="sectlevel2">
<li><a href="#_using_the_library_in_a_maven_build">Using the Library in a Maven build</a></li>
<li><a href="#_installing_the_nbm_into_netbeans">Installing the NBM into Netbeans</a></li>
<li><a href="#_links">Links</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="content">
<div class="sect1">
<h2 id="_introduction">Introduction</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The ActionsSupport NBM is a set of classes which can be used by other NetBeans
plugins, to allow the creation of Actions, with the ability to run external
programs.</p>
</div>
<div class="paragraph">
<p>This document is designed for developers of NetBeans Modules who wish to
integrate these features into their code.</p>
</div>
<div class="paragraph">
<p>These Action can execute:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>NetBeans methods</p>
</li>
<li>
<p>Methods coded within the plugin</p>
</li>
<li>
<p>External programs which can be executed in a CLI-like manner, allowing the use
of such programs from the NetBeans UI</p>
</li>
</ul>
</div>
<div class="sect2">
<h3 id="_dynamicactions_and_dynamicasyncactions">DynamicActions and DynamicAsyncActions</h3>
<div class="paragraph">
<p>A Dynamic Action is an Action which
can be enabled or disabled and is not displayed when disabled.</p>
</div>
<div class="paragraph">
<p>These are two classes of Dynamic Actions:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The base class (DynamicAction) which mirrors the Action class.</p>
</li>
<li>
<p>The DynamicAsyncAction class which mirrors the DynamicAction class, running the
onClick method in a seperate thread, so being suitable for any action which takes
a period of time (which would otherwise block the processing of UI events).</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>DynamicActions can be associated with a particular node, either being for:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>All projects of a particular type</p>
</li>
<li>
<p>A specific project, as defined by a properties file
using DynamicAyncActions.</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="_nodeactions">NodeActions</h3>
<div class="paragraph">
<p>NodeActions supports the creation of Actions for a
node, by enabling the creation of DynamicCLIActions using a properties file.</p>
</div>
<div class="paragraph">
<p>NodeActions observes the node folder containing the property file,
ensuring the actions are updated whenever changes occur to the properties file.</p>
</div>
<div class="paragraph">
<p>Additional files within the node folder can be observed,
so that changes can trigger updates to any associated objects.</p>
</div>
<div class="paragraph">
<p>NodeActions provides a method for assembling node actions, combining
various sources of actions to create the final dynamic actions array required by
a node definition.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_actionssupport_in_action">ActionsSupport in action</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_nodeactions_example">NodeActions example</h3>
<div class="paragraph">
<p>NodeActions creation:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>accepts the filename of a properties file</p>
</li>
<li>
<p>enables the creation of DynamicAyncActions from the information in a
properties file</p>
</li>
<li>
<p>monitors the properties file for changes and refreshes the actions as
necessary</p>
</li>
<li>
<p>enables support for assembling a node&#8217;s actions</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>In the node constructor, add:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">XXXXProject(FileObject dir, ProjectState state) {
    .....
    dynamicactions = new NodeActions(dir, "projectactions", "Build"); <b class="conum">(1)</b>
}</code></pre>
</div>
</div>
<div class="colist arabic">
<ol>
<li>
<p>create a DynamicActions object, which will observe a
file <em>projectactions.properties</em> within folder <em>dir</em> for changes.
It will use the content of that file to define DynamicAsyncAction objects,
updating these actions whenever the file changes.
The third parameter defines the root of the default OutputWindow tab which can be used
by this node&#8217;s Actions.  The actual tab title is a concatonation of the root and
the node&#8217;s folder name.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>In order to be able to create the node&#8217;s actions, NodeActions must be
made aware of all other actions required.
It will create the list containing three sections, with separators.
Any of the sections may be empty.</p>
</div>
<div class="paragraph">
<p>The sections are:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Basic node actions, typically the standard NetBeans actions which a node
would want to include</p>
</li>
<li>
<p>Node actions, typically DynamicAsyncActions which are node type specific (ie not
defined in the node&#8217;s properties file)</p>
</li>
<li>
<p>DynamicAsyncActions which are created using the node&#8217;s property file</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The third group are defined by the NodeActions constructor, while the
others must be passed to NodeActions (using setNodeBasicActions
and setNodeActions methods).</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">dynamicactions.setNodeBasicActions(
                CommonProjectActions.renameProjectAction(),
                CommonProjectActions.copyProjectAction(),
                CommonProjectActions.closeProjectAction() <b class="conum">(1)</b>
        );
dynamicactions.setNodeActions(
                new DynamicAsyncAction("Bake")
                        .onAction(
                            () -&gt; new CLIExec(projectDir,"jbake -b")
                                    .stderrToOutputWindow()
                                    .stdoutToOutputWinow()
                                    .executeUsingOutput("Baking")) <b class="conum">(2)</b>
                );</code></pre>
</div>
</div>
<div class="colist arabic">
<ol>
<li>
<p>define 3 actions, in this case standard Netbeans Project Actions.</p>
</li>
<li>
<p>define 1 DynamicAsyncAction, which will appear in all projects of this type.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>The Node should use the NodeActions getAllNodeActions method to obtain
it&#8217;s Action array.
This will combine all valid actions which have been made known to NodeActions.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">public Action[] getActions(boolean arg0) {
    return dynamicactions.getAllNodeActions(); <b class="conum">(1)</b>
}</code></pre>
</div>
</div>
<div class="colist arabic">
<ol>
<li>
<p>Call NodeActions getAllNodeActions method to get a merged list of
all actions.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="_use_of_the_dynamicactiondynamicasyncaction_classes">Use of the DynamicAction/DynamicAsyncAction classes</h3>
<div class="paragraph">
<p>While the majority of uses of this module will be via the NodeActions
API, it is possible to use the DynamicAction classes independently.</p>
</div>
<div class="sect3">
<h4 id="_dynamicaction_examples">DynamicAction examples</h4>
<div class="paragraph">
<p>Add a DynamicAction to a node&#8217;s actions.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">@Override
public Action[] getActions(boolean arg0) {
    return  new Action[]{
                ...
                null,
                new DynamicAction("do something")
                    .onAction(()-&gt;do_something()) <b class="conum">(1)</b> <b class="conum">(2)</b>
            });
}</code></pre>
</div>
</div>
<div class="colist arabic">
<ol>
<li>
<p>Create the DynamicAction</p>
</li>
<li>
<p>&#8230;&#8203;and add it to the nodes&#8217;s actions.
The action is enabled so needs no further initialisation.</p>
</li>
</ol>
</div>
</div>
<div class="sect3">
<h4 id="_dynamicasyncaction_example">DynamicAsyncAction example</h4>
<div class="paragraph">
<p>Add a DynamicAsyncAction to a node&#8217;s actions.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">@Override
public Action[] getActions(boolean arg0) {
    return  new Action[]{
                ...
                null,
                new DynamicAsyncAction("do something")
                    .onAction(()-&gt;do_something()) <b class="conum">(1)</b> <b class="conum">(2)</b>
            });
}</code></pre>
</div>
</div>
<div class="colist arabic">
<ol>
<li>
<p>Create the DynamicAsyncAction</p>
</li>
<li>
<p>&#8230;&#8203;and add it to the nodes&#8217;s actions.
The action is enabled so needs no further initialisation.</p>
</li>
</ol>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_the_actionssupport_api">The ActionsSupport API</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_nodeactions_2">NodeActions</h3>
<div class="paragraph">
<p>NodeActions creates DynamicAsyncActions for a  node, using a
properties file to define these actions.</p>
</div>
<div class="paragraph">
<p>NodeActions observes the node folder containing the properties file,
ensuring the actions are updated whenever changes to the properties file occur.</p>
</div>
<div class="paragraph">
<p>Additional files within the node folder can be observed,
so that changes can trigger updates to any associated objects.</p>
</div>
<div class="paragraph">
<p>NodeActions provides a method for assembling node actions, combining
various sources of actions to create the Actions array required by
a node definition.</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">public static enum FileChangeType {CREATED, CHANGED, RENAMEDTO, RENAMEDFROM, DELETED} </dt>
<dd>
<p>The types of file changes which are observed by NodeActions.</p>
</dd>
</dl>
</div>
<div class="sect3">
<h4 id="_constructor">Constructor</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public NodeActions(FileObject filefolder, String actionpropertiesfilename, String tabprefix) </dt>
<dd>
<p>Create a NodeActions object:</p>
<div class="ulist">
<ul>
<li>
<p><em>filefolder</em> The filefolder containing the actionsproperties file (the node folder)</p>
</li>
<li>
<p><em>actionpropertiesfilename</em> The filename of the actions property file</p>
</li>
<li>
<p><em>tabprefix</em> defines the root of the default OutputWindow tab which can be used
by this node&#8217;s Actions.  The actual tab title is a concatination of the root and
the node&#8217;s folder name</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_methods">Methods</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public final void registerFile(String filename, String fileext, Consumer&lt;FileChangeType&gt; callback) </dt>
<dd>
<p>Register an addition file to be observed.
This file is expected to be present (when existing) in the same folder as the
actions properties file:</p>
<div class="ulist">
<ul>
<li>
<p><em>filename</em> The filename of the file to be observed</p>
</li>
<li>
<p><em>fileext</em> The file extension of the file to be observed</p>
</li>
<li>
<p><em>callback</em> The method to be called where a change is observed on this file</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">public void setBasicNodeActions(Action&#8230;&#8203; basicnodeactions) </dt>
<dd>
<p>define the set of
basic actions which are to be included in the Node&#8217;s actions popup.</p>
</dd>
<dt class="hdlist1">public void setNodeActions(DynamicAsyncAction&#8230;&#8203; nodeactions) </dt>
<dd>
<p>define the set of actions
which are particular to all projects of this node&#8217;s project type.</p>
</dd>
<dt class="hdlist1">public Action[] getAllNodeActions() </dt>
<dd>
<p>Return an array of enabled actions for the node.
This includes the basicNodeActions, the NodeActions and any DynamicAsyncActions
that were defined by the properties file.</p>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_structure_of_the_properties_file">Structure of the Properties file</h4>
<div class="paragraph">
<p>The properties file must include a property <em>COMMANDCOUNT</em> which indicates
the number of actions being defined in this file.</p>
</div>
<div class="paragraph">
<p>Each action being defined must have two or more property lines defined:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><em>n.label</em> the label displayed in the popup list (required)</p>
</li>
<li>
<p><em>n.command</em> the CLI command to be executed when the action is selected (required)</p>
</li>
<li>
<p><em>n.inputfrom</em> defines the source for the STDIN stream (optional):</p>
<div class="ulist">
<ul>
<li>
<p><em>file</em> a file is to be used as the STDIN stream (see inputfile)</p>
</li>
<li>
<p><em>ui</em> the Output window is to be the STDIN stream, providing keyboard input</p>
</li>
<li>
<p><em>noinput</em> no input is provided for STDIN (default)</p>
</li>
</ul>
</div>
</li>
<li>
<p><em>n.inputfile</em> defines the input file for STDIN (optional, unless <em>inputfrom</em>
is set to <em>file</em>)</p>
</li>
<li>
<p><em>n.needscancel = yes</em> add a cancel button to the Output Window sidebar (cancels
the Process created by the DynamicAsyncAction)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>note that <em>n</em> must be an integer between 1 and <em>COMMANDCOUNT</em>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>1.label = Bake
1.command = jbake -b"
2.label = Copy NBPCG User Guide (html format)
2.command = bash -c "./copynbpcguguide ${NODEPATH} ~/DocumentationProjects/NBPCGDocumentation/UserGuide"
COMMANDCOUNT = 2</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_dynamicaction">DynamicAction</h3>
<div class="paragraph">
<p>DynamicAction is the basic class of the Actions Support Plugin.
A DynamicAction is an implementation of the Netbeans AbstractAction class.</p>
</div>
<div class="paragraph">
<p>A DynamicAction is an Action which can be enabled or disabled, it is not
displayed when disabled.</p>
</div>
<div class="sect3">
<h4 id="_constructor_2">Constructor</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public DynamicAction(String label) </dt>
<dd>
<p>Construct a DynamicAction which
is enabled:</p>
<div class="ulist">
<ul>
<li>
<p><em>label</em> The label displayed when this DynamicAction is displayed.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_methods_2">Methods</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public DynamicAction onAction(Runnable action) </dt>
<dd>
<p>Set the Action method.</p>
<div class="ulist">
<ul>
<li>
<p><em>action</em> the method to be run when this action is selected.</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">public DynamicAction enable(boolean enable) </dt>
<dd>
<p>Enable/Disable this Action.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_dynamicasyncaction">DynamicAsyncAction</h3>
<div class="paragraph">
<p>DynamicAsyncAction is a extension of DynamicAction.  It&#8217;s action method
runs the Action method on another thread, so not potentialling blocking the
Action calling thread.</p>
</div>
<div class="paragraph">
<p>The constructor and public methods for this Action is identical to the
DynamicAction class.</p>
</div>
<div class="sect3">
<h4 id="_constructor_3">Constructor</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public DynamicAction(String label) </dt>
<dd>
<p>Construct a DynamicAction which
is enabled:</p>
<div class="ulist">
<ul>
<li>
<p><em>label</em> The label displayed when this DynamicAction is displayed.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_methods_3">Methods</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public DynamicAction onAction(Runnable action) </dt>
<dd>
<p>Set the Action method.</p>
<div class="ulist">
<ul>
<li>
<p><em>action</em> the method to be run when this action is selected.</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">public DynamicAction enable(boolean enable) </dt>
<dd>
<p>Enable/Disable this Action.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_cliexec">CLIExec</h3>
<div class="paragraph">
<p>CliExec is a class which is both a builder for CLI type commands and also its execution.
Builder methods include configuration and input and output file options.
Execution methods are available to utilise an Output Window tab (either
unique or shared), in addition to the basic execution option.</p>
</div>
<div class="sect3">
<h4 id="_constructor_4">Constructor</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public CLIExec(FileObject dir, String clicommand) </dt>
<dd>
<p>Create a
CLIExec object:</p>
<div class="ulist">
<ul>
<li>
<p><em>dir</em> The node folder - will be used as the working directory when executing
this object.</p>
</li>
<li>
<p><em>clicommand</em> the command to be run when executing this command.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
<div class="paragraph">
<p>The clicommand includes limited parameter substitution:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>${NODEPATH} - is replaced with the node folder path.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The clicommand has to be parsed into CLI "phrases", such as options, option
parameters, filenames etc.
As this constructor never can have a full understanding of every command&#8217;s syntax, it
employs a basic parsing technique (breaking on word breaks ie white space).
This works in the vast majority of cases, but there are times where the CLI "phrase"
should include multiple words.
If this is the case, the phrase should be written with enclosing double quotes.
These quotes will be stripped from the generated command prior to it being
passed to ProcessBuilder.</p>
</div>
</div>
<div class="sect3">
<h4 id="_process_stdin_configuration">Process stdin configuration</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public CLIExec stdin(FileObject fo) </dt>
<dd>
<div class="ulist">
<ul>
<li>
<p><em>fo</em> Use the fileobject as stdin for the Process</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">public CLIExec stdin(File file) </dt>
<dd>
<div class="ulist">
<ul>
<li>
<p><em>file</em> Use the file as stdin for the Process</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">public CLIExec stdin(InputStream is) </dt>
<dd>
<div class="ulist">
<ul>
<li>
<p><em>is</em> Use the inputstream as stdin for the Process. A thread will
be created to copy from the inputsteam to the stdin for the Process.</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">public CLIExec stdin(Reader rdr) </dt>
<dd>
<div class="ulist">
<ul>
<li>
<p><em>rdr</em> Use the rdr as stdin for the Process. A thread will
be created to copy from the rdr to the stdin for the Process.</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">public CLIExec stdinFromOutputWindow() </dt>
<dd>
<p>Use the input from the Output Window
as stdin for the Process. A thread will
be created to copy from the input to the stdin for the Process.</p>
</dd>
<dt class="hdlist1">public CLIExec stdinFlushPeriod(int millisecs) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stdinFlushPeriod() </dt>
<dd>
<p>aaa</p>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_process_stdout_configuration">Process stdout configuration</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public CLIExec stdout(FileObject fo) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stdout(File file) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stdout(OutputStream os) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stdout(Writer wtr) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stdoutToOutputWindow() </dt>
<dd>
<p>aaa</p>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_process_stderr_configuration">Process stderr configuration</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public CLIExec stderr2stdoutput() </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stderr(FileObject fo) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stderr(File file) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stderr(OutputStream os) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stderr(Writer wtr) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec stderrToOutputWindow() </dt>
<dd>
<p>aaa</p>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_other_configuration_methods">Other configuration methods</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public CLIExec needsCancel() </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec preprocessing(Consumer&lt;OutputWriter&gt; preprocessing) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public CLIExec postprocessing(Consumer&lt;OutputWriter&gt; postprocessing) </dt>
<dd>
<p>aaa</p>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="_execution_methods">Execution Methods</h4>
<div class="dlist">
<dl>
<dt class="hdlist1">public void executeUsingOutput(String startmessage) </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public void executeUsingOutput() </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public void execute() </dt>
<dd>
<p>aaa</p>
</dd>
<dt class="hdlist1">public void printerror(String phase, String exmsg) </dt>
<dd>
<p>aaa</p>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_utilising_the_actionssupport_nbm">Utilising the ActionsSupport NBM</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The following provides a quick reference to key information needed to
use the ActionsSupport NBM.</p>
</div>
<div class="sect2">
<h3 id="_using_the_library_in_a_maven_build">Using the Library in a Maven build</h3>
<div class="paragraph">
<p>The NBM must be added as a dependency in your POM.  To ensure Maven can find
it in the GitHub Maven repository, you will have add the following in your POM:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;repositories&gt;
    &lt;repository&gt;
        &lt;id&gt;github&lt;/id&gt;
        &lt;url&gt;https://maven.pkg.github.com/The-Retired-Programmer/NetBeansNBMs&lt;/url&gt;
    &lt;/repository&gt;
&lt;/repositories&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>and then add a dependency in your POM</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">    &lt;dependency&gt;
        &lt;groupId&gt;uk.theretiredprogrammer&lt;/groupId&gt;
        &lt;artifactId&gt;actionssupport&lt;/artifactId&gt;
        &lt;version&gt;{release-version}&lt;/version&gt;
    &lt;/dependency&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_installing_the_nbm_into_netbeans">Installing the NBM into Netbeans</h3>
<div class="paragraph">
<p>To be able to use the Plugin it must be downloaded and then installed in Netbeans.</p>
</div>
<div class="paragraph">
<p>There is two ways to download the NBM:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Releases of this product are stored in a Maven repository on GitHub.
It is possible to download an NBM from the Package available
.</p>
</li>
<li>
<p>However assuming you have added the dependency to you POM and have compiled your
code, a copy of the NBM will have been down loaded to your local Maven
repository (by default ~/.m2).</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Once you have a downloaded copy on your machine, you follow the standard
Netbeans process to install the downloaded file (Tools&gt;Plugins)</p>
</div>
</div>
<div class="sect2">
<h3 id="_links">Links</h3>
<div class="ulist">
<ul>
<li>
<p>Releases are stored in a Maven repository on
<a href="https://github.com/The-Retired-Programmer/NetBeansNBMs/packages/1609349">GitHub</a></p>
</li>
<li>
<p>Source Code is stored in a Git repository on
<a href="https://github.com/The-Retired-Programmer/NetBeansNBMs">GitHub</a> as part of
a monorepro containing NBMs.</p>
</li>
<li>
<p>Documentation can be found on the
<a href="https://www.theretiredprogrammer.com/tags/ActionsSupport.html">TRP website</a>.</p>
</li>
<li>
<p>Documentation source is stored in a Git repository on
<a href="https://github.com/The-Retired-Programmer/ProductDocumentation">GitHub</a> as part of
a monorepro containing documentation.</p>
</li>
<li>
<p>Standard Development Process documentation for The-Retired-Programmer
products can be found on the
<a href="https://www.theretiredprogrammer.com/tags/DevelopProcesses.html">TRP website</a>.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2022-10-01 23:04:23 +0100
</div>
</div>
</body>
</html>